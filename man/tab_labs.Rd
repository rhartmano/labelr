% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tab_labs.R
\name{tab_labs}
\alias{tab_labs}
\alias{tabl2}
\title{Generate a Value Labels Frequency Table with Ad Hoc Numeric Coercion}
\usage{
tab_labs(
  data,
  vars = NULL,
  qtiles = 4,
  wt = NULL,
  prop.digits = NULL,
  div.by = NULL,
  max.unique.vals = 10,
  sort.freq = TRUE,
  zero.rm = FALSE,
  irreg.rm = FALSE,
  wide.col = NULL
)

tabl2(
  data,
  vars = NULL,
  qtiles = 4,
  wt = NULL,
  prop.digits = NULL,
  div.by = NULL,
  max.unique.vals = 10,
  sort.freq = TRUE,
  zero.rm = FALSE,
  irreg.rm = FALSE,
  wide.col = NULL
)
}
\arguments{
\item{data}{a data.frame.}

\item{vars}{a quoted character vector of variable names of categorical (to
include integer) variables you wish to include in the table. If left NULL and
labs.on = FALSE,\code{tab_labs} will attempt to construct a table over all combinations
of all variables in the data.frame that do not exceed your max.unique.vals
threshold.}

\item{qtiles}{the number of quantile categories to employ in auto-labeling
numeric columns that exceed the max.unique.vals threshold.}

\item{wt}{an optional vector that includes cell counts or some other
idiosyncratic "importance" weight. If NULL, no weighting will be employed.}

\item{prop.digits}{if non-NULL, cell percentages (proportions) will be
returned instead of counts, and these will be rounded to the digit specified
(e.g., prop.digits = 3 means a value of 0.157 would be returned for a cell
that accounted for 8 observations if the total number of observations were
51).}

\item{div.by}{Divide the returned counts by a constant for scaling purposes.
This may be a number (e.g., div.by = 10 to divide by 10) or a character that
follows the convention "number followed by 'K', 'M', or 'B'", where, e.g.,
"10K" is translated as 10000, "1B" is translated as 1000000000, etc.}

\item{max.unique.vals}{Integer to specify the maximum number of unique values
of a variable that may be observed for that variable to be included in
tabulations. Note that labelr sets a hard ceiling of 5000 on the total number
of unique value labels that any variable is permitted to have under any
circumstance, as labelr is primarily intended for interactive use with
moderately-sized (<=~1M-row) data.frames.}

\item{sort.freq}{By default, returned table rows are sorted ascending by
distinct values of vars (in the order vars are specified). If TRUE, the table
will instead be sorted in descending order of cell frequency (most frequent
categories/combinations first).}

\item{zero.rm}{If TRUE, zero-frequency vars categories/combinations (i.e.,
those not observed in the data.frame) will be filtered from the table.}

\item{irreg.rm}{If TRUE, tabulations exclude cases where any applicable
variable (see vars argument) features any of the following "irregular"
values: NA, NaN, Inf, -Inf, or any non-case-sensitive variation on "NA",
"NAN", "INF", or "-INF." If FALSE, all "irregular" values (as just defined)
are assigned to a "catch-all" category of NA that is featured in the
returned table (if/where present).}

\item{wide.col}{If non-NULL, this is the quoted name of a single column / var
of supplied data.frame whose distinct values you wish to be columns of the
returned table. For example, if you are interested in a cross-tab of
"edu" (highest level of education) and "race" (a race/ethnicity variable),
you could supply vars= c("edu", "race") and wide.col = "race", and the
different racial-ethnic group categories would appear as distinct columns,
with "edu" category levels appearing as distinct rows, and cell values
representing the cross-tabbed cell frequencies (perhaps easier demonstrated
than described: see examples). You may supply at most one wide.col.}
}
\value{
a data.frame.
}
\description{
\code{tab_labs} is largely a wrapper to \code{labelr::tabl}, with the labs.on argument
hard-coded to TRUE and with the added ability to automatically re-code
many-valued numerical variables into quantile categories (for tabulation
purposes).
}
\details{
\code{tab_labs} calculates raw or weighted frequency counts (or proportions)
over an arbitrary number of variables, with tabulations calculated and
expressed in terms of value labels for any value-labeled variables, and with
various options available.

Note: Unlike \code{tabl}, \code{tab_labs} forces any value-labeled variable tabulations
to be expressed in terms of value labels, not raw values themselves.
Additionally, if qtiles argument is non-NULL (defaults is 4), any numeric
variables whose unique values exceed the max.unique.vals thresh number
(default is 10) will be converted to quantile categories for tabular display
purposes (where, e.g., "q050" means values of variable that are at or below
its 50th percentile).
}
\examples{
# assign mtcars data.frame to df data.frame
df <- mtcars

# add value labels
df <- add_val_labs(
  data = df,
  vars = "am",
  vals = c(0, 1),
  labs = c("automatic", "manual")
)

df <- add_val_labs(
  data = df,
  vars = "carb",
  vals = c(1, 2, 3, 4, 6, 8),
  labs = c(
    "1-carb", "2-carbs",
    "3-carbs", "4-carbs",
    "6-carbs", "8-carbs"
  )
)

tab_labs(df, vars = c("am", "mpg", "disp", "carb"), qtiles = 3) # runs quickly

# show how tab_labs() behaves with a non-value-labeled data.frame
tab_labs(iris) # runs quickly

tab_labs(mtcars) # takes a few (literal) minutes!
}
